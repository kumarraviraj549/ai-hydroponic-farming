version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hydroai_postgres
    environment:
      POSTGRES_DB: hydroai
      POSTGRES_USER: hydroai_user
      POSTGRES_PASSWORD: hydroai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: hydroai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Flask API Backend
  api:
    build: .
    container_name: hydroai_api
    environment:
      FLASK_ENV: development
      DATABASE_URL: postgresql://hydroai_user:hydroai_password@postgres:5432/hydroai
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
      JWT_SECRET_KEY: jwt-secret-key-change-in-production
    ports:
      - "5000:5000"
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    command: >
      sh -c "python seed_data.py && 
             flask db upgrade && 
             python app.py"

  # WebSocket Server
  websocket:
    build: .
    container_name: hydroai_websocket
    ports:
      - "8765:8765"
    volumes:
      - .:/app
    restart: unless-stopped
    command: python websocket_server.py

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: hydroai_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: hydroai_network
